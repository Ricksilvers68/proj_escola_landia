<!DOCTYPE html>
<html lang="pt-BR">

<head>
  <meta charset="UTF-8">
  <title>Relatório por Período</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
  <!-- Inclui a biblioteca Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    @media print {
      .no-print {
        display: none;
      }
    }
  </style>
  <style>
    .chart-container {
      padding: 20px;
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
  </style>
  <style>
  #btnTopo {
    display: none;
    position: fixed;
    bottom: 30px;
    right: 30px;
    z-index: 999;
    width: 50px;
    height: 50px;
    font-size: 22px;
    align-items: center;
    justify-content: center;
  }
</style>
</head>

<body class="bg-light">
  <div class="container mt-5">
    <h1 class="mb-4 text-center">Relatório por Período</h1>

    <!-- Formulário de seleção de datas -->
    <form method="POST" action="/relatorio_data" class="row g-3 mb-3 no-print">
      <div class="col-md-5">
        <label for="inicio" class="form-label">Data Inicial:</label>
        <input type="date" id="inicio" name="inicio" class="form-control" required>
      </div>
      <div class="col-md-5">
        <label for="fim" class="form-label">Data Final:</label>
        <input type="date" id="fim" name="fim" class="form-control" required>
      </div>
      <div class="col-md-2 d-flex align-items-end">
        <button type="submit" class="btn btn-primary w-100">Buscar</button>
      </div>
    </form>

    <% if (entradas && entradas.length> 0) { %>

      <!-- Campo de busca local -->
      <div class="position-relative mb-3 no-print">
        <i class="bi bi-search position-absolute top-50 start-0 translate-middle-y ms-2 text-muted"></i>
        <input type="text" class="form-control form-control-sm ps-5" id="searchInput"
          placeholder="Buscar por Nome ou RA..." style="border: 1px solid rgb(0, 255, 0);">
      </div>

      <table class="table table-bordered table-hover" id="tabela-entradas">
        <thead class="table-secondary">
          <tr>
            <th>Nome</th>
            <th>RA</th>
            <th>Data</th>
            <th>Justificativa</th>
            <th>Telefone 1</th>
            <th>Telefone 2</th>
          </tr>
        </thead>
        <tbody>
          <% entradas.forEach(entrada=> { %>
            <tr>
              <td><%= entrada.nome ? String(entrada.nome).toUpperCase() : '-' %></td>
              <td>
                <%= entrada.ra %>
              </td>
              <td>
                <%= new Date(entrada.data_hora).toLocaleString('pt-BR') %>
              </td>
              <td>
                <%= entrada.justificativa?.trim() || '-' %>
              </td>
              <td>
                <%= entrada.tel_responsavel_1 || '-' %>
              </td>
              <td>
                <%= entrada.tel_responsavel_2 || '-' %>
              </td>
            </tr>
            <% }); %>
        </tbody>
      </table>

      <!-- Container para o gráfico, posicionado abaixo da tabela -->
      <div class="chart-container mt-4 mb-4 no-print">
        <h4 class="text-center">Entradas por Dia no Período</h4>
        <canvas id="relatorioChart"></canvas>
      </div>

      <div class="text-center no-print mt-4">
        <a href="/" class="btn btn-secondary no-print">Voltar</a>
        <button onclick="window.print()" class="btn btn-success no-print">Imprimir</button>
      </div>

      <% } else if (typeof entradas !=='undefined' ) { %>
        <p class="text-muted text-center">Nenhuma entrada encontrada para esse período.</p>
        <div class="text-center mt-3">
          <a href="/" class="btn btn-secondary no-print">Voltar</a>
        </div>
        <% } %>

  </div>

  <!-- Script para gerar o gráfico dinamicamente -->
  <% if (entradas && entradas.length > 0) { %>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Pega os dados das entradas que o servidor enviou para o EJS
      const entradas = <%- JSON.stringify(entradas) %>;

      // Agrupa e conta as entradas por dia
      const contagemPorDia = entradas.reduce((acc, entrada) => {
        // Formata a data para o padrão brasileiro (DD/MM/AAAA) para usar como chave
        const data = new Date(entrada.data_hora).toLocaleDateString('pt-BR', { timeZone: 'UTC' });
        acc[data] = (acc[data] || 0) + 1;
        return acc;
      }, {});

      // Ordena as datas para que o gráfico fique em ordem cronológica
      const labelsOrdenados = Object.keys(contagemPorDia).sort((a, b) => {
          const [diaA, mesA, anoA] = a.split('/');
          const [diaB, mesB, anoB] = b.split('/');
          return new Date(`${anoA}-${mesA}-${diaA}`) - new Date(`${anoB}-${mesB}-${diaB}`);
      });

      const dataOrdenada = labelsOrdenados.map(label => contagemPorDia[label]);

      const ctx = document.getElementById('relatorioChart').getContext('2d');
      new Chart(ctx, {
        type: 'bar', // Tipo de gráfico
        data: {
          labels: labelsOrdenados, // Eixo X (Datas)
          datasets: [{
            label: 'Total de Entradas por Dia',
            data: dataOrdenada, // Eixo Y (Contagem)
            backgroundColor: 'rgba(25, 135, 84, 0.6)',
            borderColor: 'rgba(25, 135, 84, 1)',
            borderWidth: 1
          }]
        },
        options: { scales: { y: { beginAtZero: true, ticks: { stepSize: 1, precision: 0 } } }, responsive: true }
      });
    });
  </script>
  <% } %>

  <!-- Script para filtro local -->
  <script>
    const filtroInput = document.getElementById('searchInput');
    const tabela = document.getElementById('tabela-entradas');
    const linhas = tabela?.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

    if (filtroInput) {
      filtroInput.addEventListener('input', () => {
        const termo = filtroInput.value.toLowerCase();
        for (let linha of linhas) {
          const nome = linha.cells[0].textContent.toLowerCase();
          const ra = linha.cells[1].textContent.toLowerCase();
          linha.style.display = (nome.includes(termo) || ra.includes(termo)) ? '' : 'none';
        }
      });
    }
  </script>
  <script>
  // Exibe o botão quando rolar a página
  window.onscroll = function() { scrollFunction() };

  function scrollFunction() {
    const btn = document.getElementById("btnTopo");
    if (document.body.scrollTop > 200 || document.documentElement.scrollTop > 200) {
      btn.style.display = "flex";
    } else {
      btn.style.display = "none";
    }
  }

  // Voltar suavemente ao topo
  function voltarAoTopo() {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }
</script>

 <!-- Botão flutuante -->
<button onclick="voltarAoTopo()" id="btnTopo" class="btn btn-info rounded-circle shadow">
  <i class="bi bi-arrow-up"></i>
</button>
</body>

</html>