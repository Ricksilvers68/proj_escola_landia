<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Entradas do Mês</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
</head>
<body class="container mt-4">

    <style>
      /* Define um container estável para o gráfico, evitando distorções na tela */
      .chart-container {
        position: relative;
        height: 40vh; /* Usa 40% da altura da tela, ajuste se necessário */
        width: 100%;
      }

      /* Esconde a imagem gerada para impressão na visualização de tela */
      #grafico-para-impressao {
        display: none;
      }

      /* Estilos para impressão */
      /* --- ESTILOS PARA IMPRESSÃO --- */
      @media print {
        .no-print {
          display: none; /* Mantém a regra para ocultar botões, etc. */
          display: none !important;
        }

        /* Garante que o gráfico não seja cortado e tenha um tamanho razoável */
        .chart-container {
          display: block !important;
        }
        /* Esconde o gráfico dinâmico (canvas) durante a impressão */
        .chart-container canvas {
          display: none !important; /* Esconde o canvas dinâmico na impressão */
          position: static !important; /* Garante que o gráfico se comporte como um bloco normal na impressão */
          page-break-inside: avoid; /* Tenta evitar que o gráfico seja quebrado entre duas páginas */
          height: 400px !important; /* Define uma altura fixa para a impressão */
          width: 100% !important; /* Define uma largura fixa para a impressão */
          display: none !important;
        }

        /* Força a impressão das cores e do fundo do gráfico (ESSENCIAL) */
        /* Mostra a imagem estática do gráfico e garante que ela não seja cortada */
        #grafico-para-impressao {
            display: block !important;
            width: 100% !important;
            page-break-inside: avoid; /* Tenta não quebrar a imagem entre páginas */
        }

        /* Força a impressão das cores (essencial para o gráfico) */
        * {
          -webkit-print-color-adjust: exact !important;
          color-adjust: exact !important;
        }

        /* Estilo para a imagem do gráfico gerada para impressão */
        #grafico-para-impressao {
            display: block !important; /* Mostra a imagem estática na impressão */
            width: 100% !important;
        }
      }
    </style>
    <style>
  #btnTopo {
    display: none;
    position: fixed;
    bottom: 30px;
    right: 30px;
    z-index: 999;
    width: 50px;
    height: 50px;
    font-size: 22px;
    align-items: center;
    justify-content: center;
  }
</style>

  <!-- Cabeçalho da página com título e botão de voltar -->
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="mb-0">Entradas do Mês</h2>
    <div class="no-print">
      <a href="/" class="btn btn-secondary"><i class="bi bi-arrow-left"></i> Voltar</a>
        </a>
    </div>
  </div>

  <form method="get" action="/entradas-mes" class="row g-2 mb-3">

  <div class="position-relative mb-3 no-print">
  <i class="bi bi-search position-absolute top-50 start-0 translate-middle-y ms-2 text-muted"></i>
  <input type="text" class="form-control form-control-sm ps-5" id="searchInput"     placeholder="Buscar por Nome ou RA..." style="border: 1px solid rgb(0, 255, 0);">
</div>
</form>

  <% if (entradas.length === 0) { %>
    <div class="alert alert-info">Nenhuma entrada registrada neste mês.</div>
  <% } else { %>
    <table class="table table-bordered table-sm" id="tabela-entradas">
      <thead>
        <tr>
          <th>Nome</th>
          <th>RA</th>
          <th>Data</th>
          <th>Hora</th>
          <th>Justificativa</th>
          <th>tel_responsavel_1</th>
          <th>tel_responsavel_2</th>
        
        </tr>
      </thead>
      <tbody>
        <% entradas.forEach(entrada => { %>
          <tr>
            <td><%= entrada.nome ? String(entrada.nome).toUpperCase() : '-' %></td>
            <td><%= entrada.ra %></td>
            <td><%= new Date(entrada.data_hora_local).toLocaleDateString('pt-BR') %></td>
            <td><%= new Date(entrada.data_hora_local).toLocaleTimeString('pt-BR') %></td>
            <td><%= entrada.justificativa || '-' %></td>
            <td><%= entrada.tel_responsavel_1 || '' %></td>
            <td><%= entrada.tel_responsavel_2 || '' %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  <% } %>

  <!-- Container para o gráfico -->
  <div class="chart-container mt-4 mb-4">
    <h4 class="text-center">Entradas por Dia no Mês</h4>
    <canvas id="entradasMesChart"></canvas>
  </div>

  <!-- Botão de imprimir -->
  <div class="mt-3 no-print">
    <button class="btn btn-info" style="margin-top: 15px;" onclick="window.print()"><i class="bi bi-printer"></i> Imprimir Lista</button>
     <a href="/" class="btn btn-secondary" style="margin-top: 15px;"><i class="bi bi-arrow-left"></i> Voltar</a>
  </div>
    <script>
    const filtroInput = document.getElementById('searchInput');
    const tabela = document.getElementById('tabela-entradas');
    const linhas = tabela?.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

    if (filtroInput) {
      filtroInput.addEventListener('input', () => {
        const termo = filtroInput.value.toLowerCase();
        for (let linha of linhas) {
          const nome = linha.cells[0].textContent.toLowerCase();
          const ra = linha.cells[1].textContent.toLowerCase();
          linha.style.display = (nome.includes(termo) || ra.includes(termo)) ? '' : 'none';
        }
      });
    }
  </script>

  <!-- Código JavaScript para gerar o gráfico -->
  <% if (entradas && entradas.length > 0) { %>
  <script>
    // Variável para armazenar a instância do gráfico e ser acessível pela função de impressão
    let meuGrafico;

    document.addEventListener('DOMContentLoaded', function() {
      // Pega os dados das entradas que o servidor enviou para o EJS
      const entradas = <%- JSON.stringify(entradas) %>;

      // Agrupa e conta as entradas por dia
      const contagemPorDia = entradas.reduce((acc, entrada) => {
        const data = new Date(entrada.data_hora).toLocaleDateString('pt-BR', { timeZone: 'UTC' });
        acc[data] = (acc[data] || 0) + 1;
        return acc;
      }, {});

      // Ordena as datas para que o gráfico fique em ordem cronológica
      const labelsOrdenados = Object.keys(contagemPorDia).sort((a, b) => {
          const [diaA, mesA, anoA] = a.split('/');
          const [diaB, mesB, anoB] = b.split('/');
          return new Date(`${anoA}-${mesA}-${diaA}`) - new Date(`${anoB}-${mesB}-${diaB}`);
      });

      const dataOrdenada = labelsOrdenados.map(label => contagemPorDia[label]);

      const ctx = document.getElementById('entradasMesChart').getContext('2d');
      meuGrafico = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: labelsOrdenados,
          datasets: [{
            label: 'Total de Entradas por Dia',
            data: dataOrdenada,
            backgroundColor: 'rgba(54, 162, 235, 0.6)', // Cor de preenchimento das barras (azul)
            borderColor: 'rgba(54, 162, 235, 1)',     // Cor da borda das barras (azul)
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false, // MUITO IMPORTANTE: permite que o gráfico preencha o container sem se deformar
          animation: false, // Desativa animações para uma renderização de impressão mais estável
          scales: { y: { beginAtZero: true, ticks: { stepSize: 1, precision: 0 } } }
        }
      });

      // Gera uma imagem estática do gráfico e a adiciona à página (escondida).
      // O CSS irá controlar a visibilidade na hora de imprimir.
      const imagemGraficoUrl = meuGrafico.toBase64Image();
      const imgElement = document.createElement('img');
      imgElement.src = imagemGraficoUrl;
      imgElement.id = 'grafico-para-impressao';
      document.querySelector('.chart-container').appendChild(imgElement);
    });
  </script>
  <% } %>

  <!-- Script para filtro na tabela -->

<script>
  // Exibe o botão quando rolar a página
  window.onscroll = function() { scrollFunction() };

  function scrollFunction() {
    const btn = document.getElementById("btnTopo");
    if (document.body.scrollTop > 200 || document.documentElement.scrollTop > 200) {
      btn.style.display = "flex";
    } else {
      btn.style.display = "none";
    }
  }

  // Voltar suavemente ao topo
  function voltarAoTopo() {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }
</script>

 <!-- Botão flutuante -->
<button onclick="voltarAoTopo()" id="btnTopo" class="btn btn-info rounded-circle shadow no-print">
  <i class="bi bi-arrow-up"></i>
</button>
</body>
</html>